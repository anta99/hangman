{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/djordje/Documents/hangman-app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport Word from \"./components/Word/Word\";\n\nfunction App() {\n  _s();\n\n  const [pressed, setPressed] = useState([]);\n  const [correctLetters, setCorrectLetters] = useState([]);\n  const [wrongLetters, setWrongLetters] = useState([]);\n  const [word, setWord] = useState(\"\");\n  const keysRegex = /^[A-z]$/;\n  useEffect(() => {\n    setWord(\"aligator\");\n  }, []);\n  useEffect(() => {\n    window.addEventListener(\"keydown\", e => {\n      const pressedKey = e.key;\n\n      if (keysRegex.test(pressedKey)) {\n        console.log(pressedKey);\n      } else {\n        console.log(\"Nije slovo\");\n      }\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(Word, {\n        wordToRender: word,\n        guessLetters: correctLetters\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 8\n      }, this), console.log(wrongLetters, correctLetters), wrongLetters.map(letter => /*#__PURE__*/_jsxDEV(\"p\", {\n        children: letter\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 34\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"Ink3Wzim9d3+6l45Yqiq0Hsob9U=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/djordje/Documents/hangman-app/src/App.js"],"names":["React","useEffect","useState","Word","App","pressed","setPressed","correctLetters","setCorrectLetters","wrongLetters","setWrongLetters","word","setWord","keysRegex","window","addEventListener","e","pressedKey","key","test","console","log","map","letter"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAcC,SAAd,EAAwBC,QAAxB,QAAuC,OAAvC;;AAEA,OAAO,WAAP;AACA,OAAOC,IAAP,MAAiB,wBAAjB;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,OAAD,EAASC,UAAT,IAAqBJ,QAAQ,CAAC,EAAD,CAAnC;AACA,QAAM,CAACK,cAAD,EAAgBC,iBAAhB,IAAmCN,QAAQ,CAAC,EAAD,CAAjD;AACA,QAAM,CAACO,YAAD,EAAcC,eAAd,IAA+BR,QAAQ,CAAC,EAAD,CAA7C;AACA,QAAM,CAACS,IAAD,EAAMC,OAAN,IAAeV,QAAQ,CAAC,EAAD,CAA7B;AACA,QAAMW,SAAS,GAAC,SAAhB;AACAZ,EAAAA,SAAS,CAAC,MAAI;AACZW,IAAAA,OAAO,CAAC,UAAD,CAAP;AACD,GAFQ,EAEP,EAFO,CAAT;AAGAX,EAAAA,SAAS,CAAC,MAAI;AACZa,IAAAA,MAAM,CAACC,gBAAP,CAAwB,SAAxB,EAAmCC,CAAD,IAAK;AACrC,YAAMC,UAAU,GAACD,CAAC,CAACE,GAAnB;;AAEA,UAAGL,SAAS,CAACM,IAAV,CAAeF,UAAf,CAAH,EAA8B;AAC5BG,QAAAA,OAAO,CAACC,GAAR,CAAYJ,UAAZ;AACD,OAFD,MAGI;AACFG,QAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACD;AACF,KATD;AAUD,GAXQ,EAWP,EAXO,CAAT;AAcA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BACE;AAAQ,MAAA,SAAS,EAAC,YAAlB;AAAA,8BACC,QAAC,IAAD;AAAM,QAAA,YAAY,EAAEV,IAApB;AAA0B,QAAA,YAAY,EAAEJ;AAAxC;AAAA;AAAA;AAAA;AAAA,cADD,EAEEa,OAAO,CAACC,GAAR,CAAYZ,YAAZ,EAAyBF,cAAzB,CAFF,EAGEE,YAAY,CAACa,GAAb,CAAiBC,MAAM,iBAAE;AAAA,kBAAIA;AAAJ;AAAA;AAAA;AAAA;AAAA,cAAzB,CAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AASD;;GAhCQnB,G;;KAAAA,G;AAkCT,eAAeA,GAAf","sourcesContent":["import React,{useEffect,useState} from \"react\";\nimport logo from './logo.svg';\nimport './App.css';\nimport Word from \"./components/Word/Word\";\n\nfunction App() {\n  const [pressed,setPressed]=useState([]);\n  const [correctLetters,setCorrectLetters]=useState([]);\n  const [wrongLetters,setWrongLetters]=useState([]);\n  const [word,setWord]=useState(\"\");\n  const keysRegex=/^[A-z]$/;\n  useEffect(()=>{\n    setWord(\"aligator\");\n  },[])\n  useEffect(()=>{\n    window.addEventListener(\"keydown\",(e)=>{\n      const pressedKey=e.key;\n      \n      if(keysRegex.test(pressedKey)){\n        console.log(pressedKey);\n      }\n      else{\n        console.log(\"Nije slovo\")\n      }\n    })\n  },[])\n  \n  \n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n       <Word wordToRender={word} guessLetters={correctLetters} />\n       {console.log(wrongLetters,correctLetters)}\n       {wrongLetters.map(letter=><p>{letter}</p>)}\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}