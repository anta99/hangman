{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/djordje/Documents/hangman-app/src/components/Word/Word.js\";\nimport React, { useState, useEffect } from \"react\";\nimport Letter from \"../Letter/Letter\"; //import \"./style.css\";\n\nexport default function Word({\n  wordToRender,\n  guessLetters\n}) {\n  const renderArr = wordToRender.split(\"\");\n  console.log(guessLetters, renderArr);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    class: \"wordHolder\",\n    children: renderArr.map(x => {\n      guessLetters.includes(x) ? /*#__PURE__*/_jsxDEV(Letter, {\n        letter: x\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 44\n      }, this) : /*#__PURE__*/_jsxDEV(Letter, {\n        letter: \"1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 68\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 9\n  }, this);\n}\n_c = Word;\n\nvar _c;\n\n$RefreshReg$(_c, \"Word\");","map":{"version":3,"sources":["/home/djordje/Documents/hangman-app/src/components/Word/Word.js"],"names":["React","useState","useEffect","Letter","Word","wordToRender","guessLetters","renderArr","split","console","log","map","x","includes"],"mappings":";;AAAA,OAAOA,KAAP,IAAcC,QAAd,EAAuBC,SAAvB,QAAuC,OAAvC;AACA,OAAOC,MAAP,MAAmB,kBAAnB,C,CACA;;AAEA,eAAe,SAASC,IAAT,CAAc;AAACC,EAAAA,YAAD;AAAcC,EAAAA;AAAd,CAAd,EAA0C;AACrD,QAAMC,SAAS,GAACF,YAAY,CAACG,KAAb,CAAmB,EAAnB,CAAhB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYJ,YAAZ,EAAyBC,SAAzB;AACA,sBACI;AAAS,IAAA,KAAK,EAAC,YAAf;AAAA,cACKA,SAAS,CAACI,GAAV,CAAcC,CAAC,IAAE;AACdN,MAAAA,YAAY,CAACO,QAAb,CAAsBD,CAAtB,iBAA2B,QAAC,MAAD;AAAQ,QAAA,MAAM,EAAEA;AAAhB;AAAA;AAAA;AAAA;AAAA,cAA3B,gBAAmD,QAAC,MAAD;AAAQ,QAAA,MAAM,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,cAAnD;AACH,KAFA;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH;KAVuBR,I","sourcesContent":["import React,{useState,useEffect} from \"react\";\nimport Letter from \"../Letter/Letter\";\n//import \"./style.css\";\n\nexport default function Word({wordToRender,guessLetters}){\n    const renderArr=wordToRender.split(\"\");\n    console.log(guessLetters,renderArr);\n    return(\n        <section class=\"wordHolder\">\n            {renderArr.map(x=>{\n                guessLetters.includes(x) ? <Letter letter={x} /> : <Letter letter=\"1\" />;\n            })}\n        </section>\n    )\n}"]},"metadata":{},"sourceType":"module"}